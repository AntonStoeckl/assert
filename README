# Assert

A simple php library which contains assertions and guard methods for input validation (not filtering!).
There is usually lots of duplicate code necessary for this kind of code
and php's assert() method is not desired here, because its clumsy to
work with inline. This library is similar to the assert functionality of PHPUnit.

Idea is to reduce the amount of code for implementing assertions
in your model and also simplify the code paths to implement assertions
(no if-clause necessary while using an assertion).

The library is not using Symfony or Zend Validators for a reason: The checks
have to be low-level, fast, non-object-oriented code to be used everywhere necessary. Using
any of the two libraries requires instantiation of several objects, using a locale component
and so on.

If any of the assertions fails a subclass of `InvalidArgumentException` is thrown.
You can pass next argument to control the message, the message code is encoded in the
assertion itself.

    <?php
    use Assert\Assertion;

    Assertion::integer($value);
    Assertion::integerish($value);
    Assertion::boolean($value);
    Assertion::notEmpty($value);
    Assertion::notNull($value);
    Assertion::regexp($value);
    Assertion::minLength($value);
    Assertion::choice($value, $choices);
    Assertion::numeric($value);
    Assertion::keyIsset($value, $key);
    Assertion::keyExists($value, $key);
    Assertion::notBlank($value);
    Assertion::instanceOf($value, $className);
    Assertion::subclassOf($value, $className);

